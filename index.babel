const board = {
  backgroundColor: 'gray',
  width: 192,
  height: 192
}

const livingCell = {
  width: 10,
  height: 10,
  margin: 1,
  backgroundColor: 'red',
  display: 'inline-block',
  float: 'left'
};

const deadCell = {
  width: 10,
  height: 10,
  margin: 1,
  backgroundColor: 'black',
  display: 'inline-block',
  float: 'left'
}

class LivingTile extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (<div style={livingCell}/>);
  }
};

class DeadTile extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (<div style={deadCell}/>);
  }
};

class Board extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      status: []
    };
    this.addStatus = this.addStatus.bind(this);
    this.createStatus = this.createStatus.bind(this);
  }
  addStatus() {
    const blip = this.state.status;
    const random = Math.random() > .5;
    if (random) {
      blip.push('Alive');
    } else {
      blip.push('Dead');
    }
    this.setState({status: blip});
  }
  createStatus() {
    for (var x = 0; x < 16; x++) {
      for (var y = 0; y < 16; y++) {
        this.addStatus();
      }
    }
  }
  render() {
    const boardCreate = this.state.status.map(function mapper(thing, index) {
      if (thing === 'Alive') {
        return <LivingTile/>
      } else {
        return <DeadTile/>
      }
    })
    return (<div>
      <div style={board}>
        {boardCreate}
      </div>
      <button onClick={this.createStatus}>Go</button>
    </div>);
  }
}
ReactDOM.render(<Board/>, document.getElementById("lifeGame"));
